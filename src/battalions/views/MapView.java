/*
 * School:         University of Alabama in Huntsville
 * Course Title:   Object-Oriented Programming in Java
 * Instructor:     Dr. Dan Rochowiak
 *
 * Course Number:  CS 321
 * Course Section: 01
 * Term:           Fall 2020
 *
 * Team:           10
 * Team Members:   Scott Clarke
 *                 Guess Crow
 *                 Blocker Griffin
 *                 Thomas Lemmons
 *                 Bryant Terry
 */
package battalions.views;
import battalions.models.Tile;
import battalions.models.Unit;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;

/**
 * Provides a view for the Map class, controlled by the MapController class.
 * @author Guess
 * @author Scott
 */
public class MapView extends javax.swing.JPanel
{
    /**
     * Instantiates a new instance of the MapView class.
     */
    public MapView()
    {
        initComponents();
        postInitComponents();
    }

    /**
     * Continues initializing components with custom, non-generated code.
     */
    private void postInitComponents()
    {
    }

    public void setMoveButtonEnabled(boolean enabled)
    {
        moveButton.setEnabled(enabled);
    }

    public void setAttackButtonEnabled(boolean enabled)
    {
        attackButton.setEnabled(enabled);
    }

    public void showSelectedTile(Tile tile)
    {
        tempSelectedTileInfo.setText((tile == null)
            ? "No tile selected."
            : tile.toString());
    }

    public void showSelectedFriendlyUnit(Unit unit)
    {
        tempSelectedFriendlyUnitInfo.setText((unit == null)
            ? "No friendly unit selected."
            : unit.toString());
    }

    public void showSelectedEnemyUnit(Unit unit)
    {
        tempSelectedEnemyUnitInfo.setText((unit == null)
            ? "No enemy unit selected."
            : unit.toString());
    }

    /**
     * Adds an action listener that will be used to move the selected
     * friendly unit to the selected tile upon clicking the Move button.
     * @param l the listener for the Move button
     */
    public void addMoveButtonListener(ActionListener l)
    {
        moveButton.addActionListener(l);
    }

    /**
     * Adds an action listener that will be used to attack the selected enemy
     * unit with the selected friendly unit upon clicking the Attack button.
     * @param l the listener for the Attack button
     */
    public void addAttackButtonListener(ActionListener l)
    {
        attackButton.addActionListener(l);
    }

    /**
     * Adds an action listener that will be used to end the current turn
     * upon clicking the End Turn button.
     * @param l the listener for the End Turn button
     */
    public void addEndTurnButtonListener(ActionListener l)
    {
        endTurnButton.addActionListener(l);
    }

    public final MapSelectorView getMapSelectorView()
    {
        return mapSelectorView2;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        showButtonGroup = new javax.swing.ButtonGroup();
        sourceSelectButtonGroup = new javax.swing.ButtonGroup();
        destinationSelectButtonGroup = new javax.swing.ButtonGroup();
        mapBorder = new javax.swing.JPanel();
        showBorder = new javax.swing.JPanel();
        showUnitsRadio = new javax.swing.JRadioButton();
        showMovesRadio = new javax.swing.JRadioButton();
        showAttacksRadio = new javax.swing.JRadioButton();
        showAllRadio = new javax.swing.JRadioButton();
        actionsBorder = new javax.swing.JPanel();
        moveButton = new javax.swing.JButton();
        attackButton = new javax.swing.JButton();
        assistButton = new javax.swing.JButton();
        selectedTileBorder = new javax.swing.JPanel();
        tempSelectedTileInfo = new javax.swing.JLabel();
        tempSelectedFriendlyUnitInfo = new javax.swing.JLabel();
        tempSelectedEnemyUnitInfo = new javax.swing.JLabel();
        optionsBorder = new javax.swing.JPanel();
        endTurnButton = new javax.swing.JButton();
        mapSelectorView2 = new battalions.views.MapSelectorView();

        mapBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Map"));

        showBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Map Layer"));

        showButtonGroup.add(showUnitsRadio);
        showUnitsRadio.setText("Show Available Units");

        showButtonGroup.add(showMovesRadio);
        showMovesRadio.setText("Show Valid Moves");

        showButtonGroup.add(showAttacksRadio);
        showAttacksRadio.setText("Show Valid Attacks");

        showButtonGroup.add(showAllRadio);
        showAllRadio.setSelected(true);
        showAllRadio.setText("Show All");

        javax.swing.GroupLayout showBorderLayout = new javax.swing.GroupLayout(showBorder);
        showBorder.setLayout(showBorderLayout);
        showBorderLayout.setHorizontalGroup(
            showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showAttacksRadio)
                    .addComponent(showMovesRadio)
                    .addComponent(showUnitsRadio)
                    .addComponent(showAllRadio))
                .addContainerGap())
        );
        showBorderLayout.setVerticalGroup(
            showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showAllRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showUnitsRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showMovesRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showAttacksRadio)
                .addContainerGap())
        );

        actionsBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions"));

        moveButton.setText("Move");

        attackButton.setText("Attack");

        assistButton.setText("Assist");
        assistButton.setEnabled(false);

        javax.swing.GroupLayout actionsBorderLayout = new javax.swing.GroupLayout(actionsBorder);
        actionsBorder.setLayout(actionsBorderLayout);
        actionsBorderLayout.setHorizontalGroup(
            actionsBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(actionsBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attackButton)
                    .addComponent(assistButton))
                .addContainerGap())
        );

        actionsBorderLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {assistButton, attackButton, moveButton});

        actionsBorderLayout.setVerticalGroup(
            actionsBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionsBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assistButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectedTileBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected"));

        tempSelectedTileInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedTileInfo.setText("[TEMP] TILE INFO");

        tempSelectedFriendlyUnitInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedFriendlyUnitInfo.setText("[TEMP] FRIENDLY UNIT INFO");

        tempSelectedEnemyUnitInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedEnemyUnitInfo.setText("[TEMP] ENEMY UNIT INFO");

        javax.swing.GroupLayout selectedTileBorderLayout = new javax.swing.GroupLayout(selectedTileBorder);
        selectedTileBorder.setLayout(selectedTileBorderLayout);
        selectedTileBorderLayout.setHorizontalGroup(
            selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedTileBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tempSelectedTileInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempSelectedFriendlyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(tempSelectedEnemyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        selectedTileBorderLayout.setVerticalGroup(
            selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedTileBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempSelectedTileInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempSelectedFriendlyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempSelectedEnemyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        optionsBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        endTurnButton.setText("End Turn");

        javax.swing.GroupLayout optionsBorderLayout = new javax.swing.GroupLayout(optionsBorder);
        optionsBorder.setLayout(optionsBorderLayout);
        optionsBorderLayout.setHorizontalGroup(
            optionsBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(endTurnButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        optionsBorderLayout.setVerticalGroup(
            optionsBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(endTurnButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mapSelectorView2Layout = new javax.swing.GroupLayout(mapSelectorView2);
        mapSelectorView2.setLayout(mapSelectorView2Layout);
        mapSelectorView2Layout.setHorizontalGroup(
            mapSelectorView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mapSelectorView2Layout.setVerticalGroup(
            mapSelectorView2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mapBorderLayout = new javax.swing.GroupLayout(mapBorder);
        mapBorder.setLayout(mapBorderLayout);
        mapBorderLayout.setHorizontalGroup(
            mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mapBorderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedTileBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionsBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(optionsBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
            .addGroup(mapBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapSelectorView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mapBorderLayout.setVerticalGroup(
            mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapSelectorView2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectedTileBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actionsBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionsBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsBorder;
    private javax.swing.JButton assistButton;
    private javax.swing.JButton attackButton;
    private javax.swing.ButtonGroup destinationSelectButtonGroup;
    private javax.swing.JButton endTurnButton;
    private javax.swing.JPanel mapBorder;
    private battalions.views.MapSelectorView mapSelectorView2;
    private javax.swing.JButton moveButton;
    private javax.swing.JPanel optionsBorder;
    private javax.swing.JPanel selectedTileBorder;
    private javax.swing.JRadioButton showAllRadio;
    private javax.swing.JRadioButton showAttacksRadio;
    private javax.swing.JPanel showBorder;
    private javax.swing.ButtonGroup showButtonGroup;
    private javax.swing.JRadioButton showMovesRadio;
    private javax.swing.JRadioButton showUnitsRadio;
    private javax.swing.ButtonGroup sourceSelectButtonGroup;
    private javax.swing.JLabel tempSelectedEnemyUnitInfo;
    private javax.swing.JLabel tempSelectedFriendlyUnitInfo;
    private javax.swing.JLabel tempSelectedTileInfo;
    // End of variables declaration//GEN-END:variables
}

/*
 * School:         University of Alabama in Huntsville
 * Course Title:   Object-Oriented Programming in Java
 * Instructor:     Dr. Dan Rochowiak
 *
 * Course Number:  CS 321
 * Course Section: 01
 * Term:           Fall 2020
 *
 * Team:           10
 * Team Members:   Scott Clarke
 *                 Guess Crow
 *                 Blocker Griffin
 *                 Thomas Lemmons
 *                 Bryant Terry
 */
package battalions.views;
import battalions.models.Map;
import battalions.models.Tile;
import battalions.models.Unit;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * Provides a view for the Map class, controlled by the MapController class.
 * @author Guess
 * @author Scott
 */
public class MapView extends javax.swing.JPanel
{
    /**
     * Instantiates a new instance of the MapView class.
     */
    public MapView()
    {
        initComponents();
        postInitComponents();
    }

    /**
     * Continues initializing components with custom, non-generated code.
     */
    private void postInitComponents()
    {
        mapPanel.addMouseListener(
            new MouseAdapter()
            {
                @Override
                public void mouseClicked(MouseEvent e)
                {
                    // Update selected tile info
                    Tile tile = mapPanel.getSelectedTile();
                    tempSelectedTileInfo.setText((tile == null)
                        ? "No tile selected."
                        : tile.toString());

                    // Update selected unit info
                    Unit unit = mapPanel.getSelectedFriendlyUnit();
                    tempSelectedFriendlyUnitInfo.setText((unit == null)
                        ? "No friendly unit selected."
                        : unit.toString());

                    // Update selected unit info
                    Unit enemyUnit = mapPanel.getSelectedEnemyUnit();
                    tempSelectedEnemyUnitInfo.setText((enemyUnit == null)
                        ? "No enemy unit selected."
                        : enemyUnit.toString());
                }
            });
    }

    /**
     * Displays a map's tiles and units.
     * @param map the map to be displayed
     */
    public void setMap(Map map)
    {
        mapPanel.setMap(map);
    }

    /**
     * Adds an action listener that will be used to perform updates upon
     * clicking the Update button.
     * @param l the listener for the Update button
     */
    public void addUpdateButtonListener(ActionListener l)
    {
        updateButton.addActionListener(l);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        showButtonGroup = new javax.swing.ButtonGroup();
        sourceSelectButtonGroup = new javax.swing.ButtonGroup();
        destinationSelectButtonGroup = new javax.swing.ButtonGroup();
        mapBorder = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        showBorder = new javax.swing.JPanel();
        showUnitsRadio = new javax.swing.JRadioButton();
        showMovesRadio = new javax.swing.JRadioButton();
        showAttacksRadio = new javax.swing.JRadioButton();
        showAllRadio = new javax.swing.JRadioButton();
        sourceSelectBorder = new javax.swing.JPanel();
        deselectRadio = new javax.swing.JRadioButton();
        selectUnitRadio = new javax.swing.JRadioButton();
        selectTileRadio = new javax.swing.JRadioButton();
        selectTileComboBox = new javax.swing.JComboBox<>();
        selectUnitComboBox = new javax.swing.JComboBox<>();
        destinationSelectBorder = new javax.swing.JPanel();
        destinationDeselectRadio = new javax.swing.JRadioButton();
        desinationSelectUnitRadio = new javax.swing.JRadioButton();
        destinationSelectTileRadio = new javax.swing.JRadioButton();
        destinationSelectTileComboBox = new javax.swing.JComboBox<>();
        destinationSelectUnitComboBox = new javax.swing.JComboBox<>();
        selectedTileBorder = new javax.swing.JPanel();
        tempSelectedTileInfo = new javax.swing.JLabel();
        tempSelectedFriendlyUnitInfo = new javax.swing.JLabel();
        tempSelectedEnemyUnitInfo = new javax.swing.JLabel();
        mapPanel = new battalions.views.MapPanel();

        mapBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Map"));

        updateButton.setText("Update");

        showBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Map Layer"));

        showButtonGroup.add(showUnitsRadio);
        showUnitsRadio.setText("Show Available Units");

        showButtonGroup.add(showMovesRadio);
        showMovesRadio.setText("Show Valid Moves");

        showButtonGroup.add(showAttacksRadio);
        showAttacksRadio.setText("Show Valid Attacks");

        showButtonGroup.add(showAllRadio);
        showAllRadio.setSelected(true);
        showAllRadio.setText("Show All");

        javax.swing.GroupLayout showBorderLayout = new javax.swing.GroupLayout(showBorder);
        showBorder.setLayout(showBorderLayout);
        showBorderLayout.setHorizontalGroup(
            showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showAttacksRadio)
                    .addComponent(showMovesRadio)
                    .addComponent(showUnitsRadio)
                    .addComponent(showAllRadio))
                .addContainerGap())
        );
        showBorderLayout.setVerticalGroup(
            showBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showAllRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showUnitsRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showMovesRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showAttacksRadio)
                .addContainerGap())
        );

        sourceSelectBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Source"));

        sourceSelectButtonGroup.add(deselectRadio);
        deselectRadio.setSelected(true);
        deselectRadio.setText("Deselect");

        sourceSelectButtonGroup.add(selectUnitRadio);
        selectUnitRadio.setText("Select Unit");

        sourceSelectButtonGroup.add(selectTileRadio);
        selectTileRadio.setText("Select Tile");

        selectTileComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout sourceSelectBorderLayout = new javax.swing.GroupLayout(sourceSelectBorder);
        sourceSelectBorder.setLayout(sourceSelectBorderLayout);
        sourceSelectBorderLayout.setHorizontalGroup(
            sourceSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceSelectBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sourceSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sourceSelectBorderLayout.createSequentialGroup()
                        .addComponent(selectUnitRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sourceSelectBorderLayout.createSequentialGroup()
                        .addComponent(selectTileRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectTileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deselectRadio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sourceSelectBorderLayout.setVerticalGroup(
            sourceSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sourceSelectBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deselectRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourceSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectTileRadio)
                    .addComponent(selectTileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sourceSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectUnitRadio)
                    .addComponent(selectUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        destinationSelectBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Destination"));

        destinationSelectButtonGroup.add(destinationDeselectRadio);
        destinationDeselectRadio.setSelected(true);
        destinationDeselectRadio.setText("Deselect");

        destinationSelectButtonGroup.add(desinationSelectUnitRadio);
        desinationSelectUnitRadio.setText("Select Unit");

        destinationSelectButtonGroup.add(destinationSelectTileRadio);
        destinationSelectTileRadio.setText("Select Tile");

        destinationSelectTileComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        destinationSelectUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout destinationSelectBorderLayout = new javax.swing.GroupLayout(destinationSelectBorder);
        destinationSelectBorder.setLayout(destinationSelectBorderLayout);
        destinationSelectBorderLayout.setHorizontalGroup(
            destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationSelectBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desinationSelectUnitRadio)
                    .addComponent(destinationSelectTileRadio)
                    .addComponent(destinationDeselectRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationSelectTileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationSelectUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        destinationSelectBorderLayout.setVerticalGroup(
            destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(destinationSelectBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(destinationDeselectRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationSelectTileRadio)
                    .addComponent(destinationSelectTileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(destinationSelectBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desinationSelectUnitRadio)
                    .addComponent(destinationSelectUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        selectedTileBorder.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected"));

        tempSelectedTileInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedTileInfo.setText("[TEMP] TILE INFO");

        tempSelectedFriendlyUnitInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedFriendlyUnitInfo.setText("[TEMP] FRIENDLY UNIT INFO");

        tempSelectedEnemyUnitInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tempSelectedEnemyUnitInfo.setText("[TEMP] ENEMY UNIT INFO");

        javax.swing.GroupLayout selectedTileBorderLayout = new javax.swing.GroupLayout(selectedTileBorder);
        selectedTileBorder.setLayout(selectedTileBorderLayout);
        selectedTileBorderLayout.setHorizontalGroup(
            selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedTileBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tempSelectedTileInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempSelectedFriendlyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempSelectedEnemyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                .addContainerGap())
        );
        selectedTileBorderLayout.setVerticalGroup(
            selectedTileBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectedTileBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempSelectedTileInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempSelectedFriendlyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tempSelectedEnemyUnitInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mapBorderLayout = new javax.swing.GroupLayout(mapBorder);
        mapBorder.setLayout(mapBorderLayout);
        mapBorderLayout.setHorizontalGroup(
            mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mapBorderLayout.createSequentialGroup()
                        .addGroup(mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateButton)
                            .addGroup(mapBorderLayout.createSequentialGroup()
                                .addComponent(showBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sourceSelectBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(destinationSelectBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectedTileBorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 244, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mapBorderLayout.setVerticalGroup(
            mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapBorderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mapBorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectedTileBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(destinationSelectBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showBorder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sourceSelectBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapBorder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton deselectRadio;
    private javax.swing.JRadioButton desinationSelectUnitRadio;
    private javax.swing.JRadioButton destinationDeselectRadio;
    private javax.swing.JPanel destinationSelectBorder;
    private javax.swing.ButtonGroup destinationSelectButtonGroup;
    private javax.swing.JComboBox<String> destinationSelectTileComboBox;
    private javax.swing.JRadioButton destinationSelectTileRadio;
    private javax.swing.JComboBox<String> destinationSelectUnitComboBox;
    private javax.swing.JPanel mapBorder;
    private battalions.views.MapPanel mapPanel;
    private javax.swing.JComboBox<String> selectTileComboBox;
    private javax.swing.JRadioButton selectTileRadio;
    private javax.swing.JComboBox<String> selectUnitComboBox;
    private javax.swing.JRadioButton selectUnitRadio;
    private javax.swing.JPanel selectedTileBorder;
    private javax.swing.JRadioButton showAllRadio;
    private javax.swing.JRadioButton showAttacksRadio;
    private javax.swing.JPanel showBorder;
    private javax.swing.ButtonGroup showButtonGroup;
    private javax.swing.JRadioButton showMovesRadio;
    private javax.swing.JRadioButton showUnitsRadio;
    private javax.swing.JPanel sourceSelectBorder;
    private javax.swing.ButtonGroup sourceSelectButtonGroup;
    private javax.swing.JLabel tempSelectedEnemyUnitInfo;
    private javax.swing.JLabel tempSelectedFriendlyUnitInfo;
    private javax.swing.JLabel tempSelectedTileInfo;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
